{"version":3,"file":"static/webpack/static/development/pages/restaurants.js.7123efe4a90ac72ee10b.hot-update.js","sources":["webpack:///./pages/restaurants.js"],"sourcesContent":["/* /pages/restaurants.js */\n\nimport gql from \"graphql-tag\";\nimport { withRouter } from \"next/router\";\nimport { graphql } from \"react-apollo\";\nimport { compose } from \"recompose\";\nimport { withContext } from \"../components/Context/AppProvider\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Col,\n  Row\n} from \"reactstrap\";\nimport Cart from \"../components/Cart/Cart\";\nimport defaultPage from \"../hocs/defaultPage\";\n\nclass Restaurants extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  addItem(item) {\n    this.props.context.addItem(item);\n  }\n  render() {\n    const {\n      data: { loading, error, restaurant },\n      router,\n      context,\n      isAuthenticated\n    } = this.props;\n    if (error) return \"Error Loading Dishes\";\n\n    if (restaurant) {\n      return (\n        <>\n          <div style={{ position: \"absolute\", left: \"125px\", top: \"13px\" }}>\n            <span style={{ fontSize: \"1.3rem\", fontFamily: \"'Gothic A1', Roboto, Helvetica, Arial, 'Open Sans'\", fontWeight: \"500\" }}> - {restaurant.name}</span>\n          </div>\n          <Row style={{ width: \"100%\", textAlign: \"center\", paddingTop: \"2px\", paddingLeft: \"20px\" }}>\n            <Col xs=\"12\" style={{ padding: 0 }}>\n              <div style={{ display: \"inline-block\" }} className=\"h-100\">\n                {restaurant.dishes.map(res => (\n                  <Card\n                    style={{ width: \"250px\", margin: \"0 10px 30px 10px\", height: \"520px\" }}\n                    key={res.id}\n                  >\n                    <CardImg\n                      top={true}\n                      style={{ height: 250 }}\n                      src={res.image.url}\n                    />\n                    <CardBody>\n                      <CardTitle className=\"card-title\" style={{ textAlign: \"left\", fontSize: \"1.3rem\", color: \"black\", fontFamily: \"'Gothic A1', Helvetica, Arial\", fontWeight: \"900\" }}>{res.name}</CardTitle>\n                      <CardText className=\"card-description\" style={{ textAlign: \"left\", fontSize: \"0.9rem\", color: \"black\", fontFamily: \"Roboto, Helvetica, Arial, 'Open Sans'\", fontWeight: \"500\" }}>{res.description}</CardText>\n                    </CardBody>\n                    <div className=\"card-footer cardfooter\">\n                      <div style={{ width: \"100%\", alignContent: \"center\", alignItems: \"center\" }}>\n                        <Button\n                          onClick={this.addItem.bind(this, res)}\n                          outline\n                          color=\"primary\"\n                          style={{ width: \"100%\", textAlign: \"center\" }}\n                        >\n                          + Add To Cart (${res.price})\n                        </Button>\n                      </div>\n                      <style jsx>\n                        {`\n                          a {\n                            color: white;\n                          }\n                          a:link {\n                            text-decoration: none;\n                            color: white;\n                          }\n                          .container-fluid {\n                            margin-bottom: 30px;\n                          }\n                          .btn-outline-primary {\n                            color: #007bff !important;\n                          }\n                          a:hover {\n                            color: white !important;\n                          }\n                          .cardfooter {\n                            position:absolute;\n                            bottom:0;\n                            width:100%;\n                          }\n                        `}\n                      </style>\n                    </div>\n                  </Card>\n                ))}\n                <div style={{ position: \"absolute\", right: \"40px\" }}>\n                <Cart isAuthenticated={isAuthenticated} />\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </>\n      );\n    }\n    return <h1>Loading</h1>;\n  }\n}\n\nconst GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n// The `graphql` wrapper executes a GraphQL query and makes the results\n// available on the `data` prop of the wrapped component (RestaurantList)\n\nexport default compose(\n  withRouter,\n  defaultPage,\n  withContext,\n  graphql(GET_RESTAURANT_DISHES, {\n    options: props => {\n      return {\n        variables: {\n          id: props.router.query.id\n        }\n      };\n    },\n    props: ({ data }) => ({ data })\n  })\n)(Restaurants);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAdA;AAqDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAzFA;AACA;AA2FA;AAkBA;AACA;AACA;AAKA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;;;;A","sourceRoot":""}