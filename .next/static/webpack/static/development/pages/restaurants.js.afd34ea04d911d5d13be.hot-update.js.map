{"version":3,"file":"static/webpack/static/development/pages/restaurants.js.afd34ea04d911d5d13be.hot-update.js","sources":["webpack:///./components/Context/AppProvider.js"],"sourcesContent":["/* /components/Context/AppProvider */\n\nimport React from \"react\";\nimport Cookies from \"js-cookie\";\n/* First we will make a new context */\nconst AppContext = React.createContext();\n\n/* Then create a provider Component */\nclass AppProvider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      total: null\n    };\n  }\n  componentDidMount() {\n    const cart = Cookies.getJSON(\"cart\");\n    //if items in cart, set items and total from cookie\n    console.log(cart);\n    let total;\n    if (cart) {\n      cart.forEach(item => {\n        total = item.price * item.quantity;\n        this.setState({ items: cart, total: total });\n      });\n    }\n  }\n\n  addItem = item => {\n    let { items } = this.state;\n    //check for item already in cart\n    //if not in cart, add item if item is found increase quanity ++\n    const newItem = items.find(i => i.id === item.id);\n\n    console.log(\"Items before: \", items);\n    if (!newItem) {\n      //set quantity property to 1\n      item.quantity = 1;\n      this.setState(\n        {\n          items: this.state.items.concat(item),\n          total: this.state.total + item.price\n        },\n        () => Cookies.set(\"cart\", this.state.items)\n      );\n    } else {\n      this.setState(\n        {\n          items: this.state.items.map(\n            item =>\n              item.id === newItem.id\n                ? Object.assign({}, item, { quantity: item.quantity + 1 })\n                : item\n          ),\n          total: this.state.total + item.price\n        },\n        () => Cookies.set(\"cart\", this.state.items)\n      );\n    }\n    console.log(\"Items after: \", items);\n  };\n  removeItem = item => {\n    let { items } = this.state;\n    //check for item already in cart\n    //if not in cart, add item if item is found increase quanity ++\n    const newItem = items.find(i => i.id === item.id);\n    console.log(\"Items before: \", items);\n    if (newItem.quantity > 1) {\n      this.setState(\n        {\n          items: this.state.items.map(\n            item =>\n              item.id === newItem.id\n                ? Object.assign({}, item, { quantity: item.quantity - 1 })\n                : item\n          ),\n          total: this.state.total - item.price\n        },\n        () => Cookies.set(\"cart\", this.state.items)\n      );\n    } else {\n      const items = [...this.state.items];\n      const index = items.findIndex(i => i.id === newItem.id);\n\n      items.splice(index, 1);\n      this.setState(\n        { items: items, total: this.state.total - item.price },\n        () => Cookies.set(\"cart\", this.state.items)\n      );\n    }\n    console.log(\"Items after: \", items);\n  };\n  clearItems() {\n    let { items } = this.state;\n    items.length = 0;\n    //check for item already in cart\n    //if not in cart, add item if item is found increase quanity ++\n    this.setState(\n      { items: items, total: 0 },\n      () => Cookies.set(\"cart\", this.state.items)\n    );\n  };\n  render() {\n    return (\n      <AppContext.Provider\n        value={{\n          items: this.state.items,\n          addItem: this.addItem,\n          removeItem: this.removeItem,\n          clearItems: this.clearItems,\n          total: this.state.total\n        }}\n      >\n        {this.props.children}\n      </AppContext.Provider>\n    );\n  }\n}\n\n/* then make a consumer which will surface it as an HOC */\n// This function takes a component...\nexport function withContext(Component) {\n  // ...and returns another component...\n  return function ContextComponent(props) {\n    // ... and renders the wrapped component with the context theme!\n    // Notice that we pass through any additional props as well\n    return (\n      <AppContext.Consumer>\n        {context => <Component {...props} context={context} />}\n      </AppContext.Consumer>\n    );\n  };\n}\n\nexport default AppProvider;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAoBA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAFA;AAKA;AAPA;AASA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AArDA;AAqDA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AAFA;AAKA;AAPA;AASA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAlFA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;AAkEA;AAAA;AACA;AADA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;AA7GA;AAgHA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;;;;A","sourceRoot":""}