{"version":3,"file":"static/webpack/static/development/pages/checkout.js.33717dda356c02bbebaf.hot-update.js","sources":["webpack:///./components/Checkout/CheckoutForm.js"],"sourcesContent":["/* /components/Checkout/CheckoutForm.js */\n\nimport React from \"react\";\n\nimport CardSection from \"./CardSection\";\n\nimport { FormGroup, Label, Input, FormText, Row, Col } from \"reactstrap\";\nimport { injectStripe } from \"react-stripe-elements\";\nimport Strapi from \"strapi-sdk-javascript/build/main\";\nimport Router from \"next/router\";\n\nconst apiUrl = process.env.API_URL || \"http://localhost:1337\";\nconst strapi = new Strapi(apiUrl);\n/* components/Checkout/CheckoutForm.js */\nclass CheckoutForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        address: \"\",\n        city: \"\",\n        state: \"\",\n        stripe_id: \"\"\n      },\n      error: \"\"\n    };\n    this.submitOrder = this.submitOrder.bind(this);\n  }\n\n  onChange(propertyName, e) {\n    const { data } = this.state;\n    data[propertyName] = e.target.value;\n    this.setState({ data });\n  }\n\n  submitOrder() {\n    const { context } = this.props;\n    const { data } = this.state;\n    console.log(context);\n    console.log(this.props.stripe.createToken())\n    this.props.stripe.createToken()\n    .then(res => {\n      strapi\n        .createEntry(\"orders\", {\n          amount: context.total,\n          dishes: context.items,\n          address: data.address,\n          city: data.city,\n          state: data.state,\n          token: res.token.id\n        })\n        .then(Router.push(\"/\"));\n    })\n    .catch(err => this.setState({ error: err}))\n  }\n\n  render() {\n    return (\n      <div className=\"paper\">\n        <h5>Your information:</h5>\n        <hr />\n        <FormGroup style={{ display: \"flex\" }}>\n          <div style={{ flex: \"0.90\", marginRight: 10 }}>\n            <Label>Address</Label>\n            <Input onChange={this.onChange.bind(this, \"address\")} />\n          </div>\n        </FormGroup>\n        <FormGroup style={{ display: \"flex\" }}>\n          <div style={{ flex: \"0.65\", marginRight: \"6%\" }}>\n            <Label>City</Label>\n            <Input onChange={this.onChange.bind(this, \"city\")} />\n          </div>\n          <div style={{ flex: \"0.25\", marginRight: 0 }}>\n            <Label>State</Label>\n            <Input onChange={this.onChange.bind(this, \"state\")} />\n          </div>\n        </FormGroup>\n\n        <CardSection\n          context={this.props.context}\n          data={this.state.data}\n          submitOrder={this.submitOrder}\n        />\n\n        <style jsx global>\n          {`\n            .paper {\n              border: 1px solid lightgray;\n              box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n                0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n                0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n              height: 550px;\n              padding: 30px;\n              background: #fafafa;\n              border-radius: 6px;\n              margin-top: 90px;\n            }\n            .form-half {\n              flex: 0.5;\n            }\n            * {\n              box-sizing: border-box;\n            }\n            body,\n            html {\n              background-color: #f6f9fc;\n              font-size: 18px;\n              font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n            }\n            h1 {\n              color: #32325d;\n              font-weight: 400;\n              line-height: 50px;\n              font-size: 40px;\n              margin: 20px 0;\n              padding: 0;\n            }\n            .Checkout {\n              margin: 0 auto;\n              max-width: 800px;\n              box-sizing: border-box;\n              padding: 0 5px;\n            }\n            label {\n              color: #6b7c93;\n              font-weight: 300;\n              letter-spacing: 0.025em;\n            }\n            button {\n              white-space: nowrap;\n              border: 0;\n              outline: 0;\n              display: inline-block;\n              height: 40px;\n              line-height: 40px;\n              padding: 0 14px;\n              box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11),\n                0 1px 3px rgba(0, 0, 0, 0.08);\n              color: #fff;\n              border-radius: 4px;\n              font-size: 15px;\n              font-weight: 600;\n              text-transform: uppercase;\n              letter-spacing: 0.025em;\n              background-color: #6772e5;\n              text-decoration: none;\n              -webkit-transition: all 150ms ease;\n              transition: all 150ms ease;\n              margin-top: 10px;\n            }\n            form {\n              margin-bottom: 40px;\n              padding-bottom: 40px;\n              border-bottom: 3px solid #e6ebf1;\n            }\n            button:hover {\n              color: #fff;\n              cursor: pointer;\n              background-color: #7795f8;\n              transform: translateY(-1px);\n              box-shadow: 0 7px 14px rgba(50, 50, 93, 0.1),\n                0 3px 6px rgba(0, 0, 0, 0.08);\n            }\n            input,\n            .StripeElement {\n              display: block;\n              margin: 10px 0 20px 0;\n              max-width: 500px;\n              padding: 10px 14px;\n              font-size: 1em;\n              font-family: \"Source Code Pro\", monospace;\n              box-shadow: rgba(50, 50, 93, 0.14902) 0px 1px 3px,\n                rgba(0, 0, 0, 0.0196078) 0px 1px 0px;\n              border: 0;\n              outline: 0;\n              border-radius: 4px;\n              background: white;\n            }\n            input::placeholder {\n              color: #aab7c4;\n            }\n            input:focus,\n            .StripeElement--focus {\n              box-shadow: rgba(50, 50, 93, 0.109804) 0px 4px 6px,\n                rgba(0, 0, 0, 0.0784314) 0px 1px 3px;\n              -webkit-transition: all 150ms ease;\n              transition: all 150ms ease;\n            }\n            .StripeElement.IdealBankElement,\n            .StripeElement.PaymentRequestButton {\n              padding: 0;\n            }\n          `}\n        </style>\n      </div>\n    );\n  }\n}\nexport default injectStripe(CheckoutForm);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAPA;AASA;AAXA;AAYA;AACA;;;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAKA;AACA;AACA;AAHA;AApBA;AAAA;AA0IA;;;;AAtLA;AACA;AAuLA;;;;;A","sourceRoot":""}