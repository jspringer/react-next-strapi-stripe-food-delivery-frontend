{"version":3,"file":"static/webpack/static/development/pages/restaurants.js.d402f04a3024371faa1d.hot-update.js","sources":["webpack:///./lib/auth.js"],"sourcesContent":["/* /lib/auth.js */\n\nimport jwtDecode from \"jwt-decode\";\nimport Cookies from \"js-cookie\";\nimport Strapi from \"strapi-sdk-javascript/build/main\";\n\nimport Router from \"next/router\";\n\n// const apiUrl = \"http://localhost:1337\";\nconst apiUrl = process.env.API_URL || \"https://jsnspr-fd-be.herokuapp.com\";\nconst strapi = new Strapi(apiUrl);\n\nexport const strapiRegister = (username, email, password) => {\n  if (!process.browser) {\n    return undefined;\n  }\n  strapi.register(username, email, password).then(res => {\n    setToken(res);\n  });\n  return Promise.resolve();\n};\n//use strapi to get a JWT and token object, save\n//to approriate cookei for future requests\nexport const strapiLogin = (email, password) => {\n  if (!process.browser) {\n    return;\n  }\n  // Get a token\n  strapi.login(email, password).then(res => {\n    setToken(res);\n  });\n  return Promise.resolve();\n};\n\nexport const setToken = token => {\n  if (!process.browser) {\n    return;\n  }\n  Cookies.set(\"username\", token.user.username);\n  Cookies.set(\"jwt\", token.jwt);\n\n  if (Cookies.get(\"username\")) {\n    Router.push(\"/\");\n  }\n};\n\nexport const unsetToken = () => {\n  if (!process.browser) {\n    return;\n  }\n  Cookies.remove(\"jwt\");\n  Cookies.remove(\"username\");\n  Cookies.remove(\"cart\");\n\n  // to support logging out from all windows\n  window.localStorage.setItem(\"logout\", Date.now());\n  Router.push(\"/\");\n};\n\nexport const getUserFromServerCookie = req => {\n  if (!req.headers.cookie || \"\") {\n    return undefined;\n  }\n\n  let username = req.headers.cookie\n    .split(\";\")\n    .find(user => user.trim().startsWith(\"username=\"));\n  if (username) {\n    username = username.split(\"=\")[1];\n  }\n\n  const jwtCookie = req.headers.cookie\n    .split(\";\")\n    .find(c => c.trim().startsWith(\"jwt=\"));\n  if (!jwtCookie) {\n    return undefined;\n  }\n  const jwt = jwtCookie.split(\"=\")[1];\n  return jwtDecode(jwt), username;\n};\n\nexport const getUserFromLocalCookie = () => {\n  return Cookies.get(\"username\");\n};\n\n//these will be used if you expand to a provider such as Auth0\nconst getQueryParams = () => {\n  const params = {};\n  window.location.href.replace(\n    /([^(?|#)=&]+)(=([^&]*))?/g,\n    ($0, $1, $2, $3) => {\n      params[$1] = $3;\n    }\n  );\n  return params;\n};\nexport const extractInfoFromHash = () => {\n  if (!process.browser) {\n    return undefined;\n  }\n  const { id_token, state } = getQueryParams();\n  return { token: id_token, secret: state };\n};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA,eAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA,eAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA,eAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,eAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAAA;AACA,eAEA;AACA;AAJA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;;;;;A","sourceRoot":""}